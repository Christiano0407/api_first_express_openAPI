openapi: 3.1.1
info:
  title: API FIrst
  version: 1.0.0
  description: This is a my first API with OpenAPI 3.1.1
servers:
  - url: http://localhost:3000
    description: Server is running in port | Production server

paths:
  /hello:
    get:
      summary: Hello World with OpenAPI 3.1.1 | API First
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloWorldResponse"

        "400":
          description: bad request | Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Invalid request parameters

        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Internal Server Error | Something went wrong

  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the user
                  example: Alma Natalia
                email:
                  type: string
                  description: The email of the user.
                  example: almaNat@example.com
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

        "400":
          description: Bad Request | Invalid Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"

    get:
      summary: Get ALL users
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /user/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The unique identifier of the user
    put:
      summary: Update a user by ID (An existing User)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the user (Optional)
                  example: Alma updated
                email:
                  type: string
                  description: The new email of the user (Optional)
                  example: almaUpdate@example.com
      responses:
        "200":
          description: User update successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request | Invalid Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      summary: Delete a user by ID (An existing User)
      responses:
        "204":
          description: User deleted successfully (No Content)
        "400":
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "404":
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

components:
  schemas:
    HelloWorldResponse:
      type: object
      properties:
        message:
          type: string
          description: A message from the API
          example: Hello World with OpenAPI 3.1.1 | API First
    User:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the user
          example: "1"
        name:
          type: string
          description: The name of the user
          example: Alma Natalia
        email:
          type: string
          description: The email of the user
          example: almaNat@example.com
      required:
        - id
        - name
        - email
    BadRequestError:
      type: object
      properties:
        message:
          type: string
          description: General error message
          example: bad request | Invalid request
        errors:
          type: object
          properties:
            name:
              type: string
              description: error message for name field
              example: name is required
            email:
              type: string
              description: error message for email field
              example: email is required
        additionalProperties:
          type: string
          description: Additional properties are not allowed
      required:
        - message
        - errors
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          description: Error message indicating resource not found
          example: User not found
      required:
        - message
